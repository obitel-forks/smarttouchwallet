import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {

    compileSdkVersion 25
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "org.vikulin.smarttouchwallet"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled=true
        manifestPlaceholders = [onesignal_app_id: "649283cd-6c35-492f-bf61-cb66885546fc",
                                // Project number pulled from dashboard, local value is ignored.
                                onesignal_google_project_number: "REMOTE"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}


task ndkBuild(type: Exec) {
    def rootDir = project.rootDir
    def localProperties = new File(rootDir, "local.properties")
    Properties properties = new Properties()
    localProperties.withInputStream { instr ->
        properties.load(instr)
    }
    def ndkDir = properties.getProperty('ndk.dir')

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine ndkDir + '\\ndk-build.cmd',
                'NDK_LIBS_OUT=main/jniLibs',
                'NDK_PROJECT_PATH='+rootDir+'\\app\\src',
                'APP_BUILD_SCRIPT=jni/Android.mk',
                '-C',
                file('src').absolutePath
    } else {
        commandLine ndkDir + '/ndk-build',
                'NDK_LIBS_OUT=main/jniLibs',
                'NDK_PROJECT_PATH='+rootDir+'/app/src',
                'APP_BUILD_SCRIPT=jni/Android.mk',
                '-C',
                file('src').absolutePath
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //httpclient
    compile "cz.msebera.android:httpclient:4.4.1.2"
    //tooltips
    compile 'it.sephiroth.android.library.targettooltip:target-tooltip-library:1.3.15'
    //push notification from OneSignal
    compile 'com.onesignal:OneSignal:3.+@aar'
    // Required for OneSignal, even if you have added FCM.
    compile 'com.google.android.gms:play-services-gcm:+'
    //web3j
    compile 'org.web3j:core-android:2.2.1'
    //appcompat
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    //QR code scanner
    compile 'me.dm7.barcodescanner:zxing:1.9.7'
    //arca debugger
    compile 'ch.acra:acra:4.9.1'
    //fix class not found error
    compile 'com.android.support:multidex:1.0.1'
    // Required for geotagging
    compile 'com.google.android.gms:play-services-location:+'
    //JSON serializer
    compile 'com.google.code.gson:gson:2.8.1'
    //ConstraintLayout
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
